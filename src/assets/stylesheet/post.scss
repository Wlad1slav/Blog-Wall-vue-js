@import "variables";

$borders-width: 1px;

@mixin border($top-border) {
  border-bottom: $borders-width solid rgba(0, 0, 0, 0.2);
  border-right: $borders-width solid rgba(0, 0, 0, 0.2);
  border-left: $borders-width solid rgba(0, 0, 0, 0.2);

  @if($top-border) {
    border-top: $borders-width solid rgba(0, 0, 0, 0.2);
    &.error {
      border-top: $borders-width solid $clr--red;
    }
  }
  &.error {
    border-bottom: $borders-width solid $clr--red;
    border-right: $borders-width solid $clr--red;
    border-left: $borders-width solid $clr--red;
  }
}

#posts {
  display: flex;
  flex-direction: column; //column-reverse; // Makes the menu output more correct
}

.post {
  @include border(false);

  position: relative;
  padding: 5px 30px;

  &:hover {
    background-color: darken(white, 5%);
  }

  .more {
    position: absolute;
    right: 0;
    top: 0;

    // dotes for view menu
    .material-symbols-outlined {
      //border-radius: 100px;
      cursor: pointer;
      position: absolute;
      right: 0;
      color: transparentize($clr--text, 0.5);

      &:hover {
        background-color: $clr--theme__hover;
      }
    }

    // menu
    ul {
      margin-top: 25px;
      background-color: white;
      border: 1px solid transparentize($clr--text, 0.9);
      padding: 0;

      position: absolute;
      z-index: 5;
      right: 0;

      a {
        text-decoration: none;
        color: $clr--text;

        li {
          list-style: none;
          padding: 5px 100px 5px 5px;

          &:hover {
            background-color: $clr--theme__hover;
            cursor: pointer;
            span {
              color: $clr--theme;
            }

            // Alerts
            &.danger {
              background-color: $clr--red__hover;
              color: $clr--red;
              span {
                color: $clr--red;
              }
            }
            &.warn {
              background-color: $clr--yellow__hover;
              span {
                color: darken($clr--yellow, 20%);
              }
            }
          }



        }
      }
    }
  }

  // Container with reactions to posts
  .post--reactions {
    display: flex;
    justify-content: space-between;

    margin-top: 10px;

    .reaction {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
      user-select: none;
      cursor: pointer;
      width: 100%;

      p {
        color: transparentize($clr--text, 0.3);
        font-size: 14px;
        transition: all 0.2s ease;
      }

      .material-symbols-outlined {
        color: transparentize($clr--text, 0.5);
        transition: all 0.2s ease;
      }

      &.active {
        .material-symbols-outlined {
          color: $clr--theme;
        }
      }

      &:hover {
        cursor: pointer;

        .material-symbols-outlined, p {
          color: $clr--theme;
        }

        &.active {
          .material-symbols-outlined, p {
            color: $clr--text;
          }
        }
      }

      &.important {
        &:hover { // A smooth zoom animation is added to important reactions
          cursor: auto;
          .material-symbols-outlined {
            transform: scale(120%);
          }
        }

        &.active {
          .material-symbols-outlined {
            transform: scale(120%);
            color: $clr--red;
          }
        }
      }

    }
  }

  // the date the post was created
  .date {
    color: transparentize($clr--text, 0.5);
    font-size: $font-size - 4;
  }
}

// The container in which the new post is written
.post--write {
  @include border(true);

  display: flex;
  flex-direction: column;

  div {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 15px;
    margin: 10px;
  }

  textarea {
    border: none;
    border-bottom: 1px dotted rgba(0, 0, 0, 0.2);
    height: 75px;
    padding: 5px;

    &:focus {
      outline: none;
    }
  }

  .characters-counter {
    user-select: none;
    color: transparentize($clr--text, 0.5);
    font-size: $font-size - 2;
  }

  // If a validation error occurs
  &.error {
    textarea {
      border-bottom: 1px dotted $clr--red !important;
      color: $clr--red;
    }
    .characters-counter {
      color: $clr--red;
    }
  }

}